export interface Contact {
  id: string;
  name: string;
  phoneNumber: string;
  avatar?: string;
  createdAt: Date;
}

export type NoteStatus = 'follow-up' | 'waiting-reply' | 'closed' | 'other';

export interface CallNote {
  id: string;
  contactId: string;
  contactName: string;
  note: string;
  createdAt: Date;
  callStartTime: Date;
  callEndTime: Date;
  callDuration: number; // in seconds
  isAutoGenerated: boolean; // true if "no note was taken"
  callDirection: 'inbound' | 'outbound';
  status: NoteStatus;
  customStatus?: string; // for when status is 'other'
  updatedAt?: Date;
  tags?: string[];
  priority?: 'low' | 'medium' | 'high';
  category?: string;
  folderId?: string; // for grouping notes into folders
}

export interface IncomingCall {
  contact: Contact;
  startTime: Date;
  direction: 'inbound' | 'outbound';
}

export interface ActiveCall {
  contact: Contact;
  startTime: Date;
  endTime?: Date;
  direction: 'inbound' | 'outbound';
}

export interface Reminder {
  id: string;
  contactId: string;
  contactName: string;
  title: string;
  description?: string;
  dueDate: Date;
  isCompleted: boolean;
  isArchived?: boolean;
  createdAt: Date;
  relatedNoteId?: string;
  completedAt?: Date;
}

export interface OrderItem {
  id: string;
  name: string;
  description?: string;
  price: number;
  quantity: number;
}

export interface Product {
  id: string;
  name: string;
  description?: string;
  price: number;
  sku?: string;
  category?: string;
  inStock?: boolean;
}

export interface ProductCatalog {
  id: string;
  name: string;
  products: Product[];
  createdAt: Date;
  updatedAt: Date;
}

export interface Order {
  id: string;
  contactId: string;
  contactName: string;
  items: OrderItem[];
  totalAmount: number;
  status: 'pending' | 'confirmed' | 'shipped' | 'delivered' | 'cancelled';
  notes?: string;
  createdAt: Date;
  updatedAt: Date;
}

export interface DetectedDateTime {
  originalText: string;
  suggestedDate: Date;
  type: 'date' | 'time' | 'datetime';
  confidence: number;
}

export interface NoteFolder {
  id: string;
  name: string;
  color: string;
  createdAt: Date;
  description?: string;
  type?: 'general' | 'sales-run';
  scheduledDate?: Date;
  noteIds?: string[];
}

export type GroupByOption = 'none' | 'day' | 'week' | 'month' | 'year' | 'folder';

export interface CallGroup {
  id: string;
  title: string;
  date?: Date;
  notes: CallNote[];
  type: 'time-based' | 'folder-based' | 'contact-based';
  folderId?: string;
  contactName?: string;
  subGroups?: CallGroup[];
}

export type FilterType = 'all' | 'status' | 'priority' | 'folder' | 'direction' | 'date';

export interface NoteFilter {
  type: FilterType;
  value: string;
  label: string;
}